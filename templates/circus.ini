[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
{% if 'httpd' in options and options['httpd'] %}
httpd = 1
httpd_host = ${options['httpd_host']}
httpd_port = ${options['httpd_port']}
{% end %}
statsd = ${options['statsd']}

[watcher:db]
cmd = couchdb
args = -a ${parts.buildout.directory}/etc/couchdb.ini
{% if 'log' in options %}
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stderr.log
{% end %}
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}

[env:db]
HOME = ${parts.buildout.directory}/var

[env]
TZ = ${options['timezone']}
{% if 'sandbox_mode' in options %}
SANDBOX_MODE = true
{% end %}

[watcher:elasticsearch]
cmd = parts/elastic/bin/elasticsearch
{% if 'log' in options %}
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/elasticsearch.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/elasticsearch.stderr.log
{% end %}

[watcher:kibana]
cmd = parts/kibana/bin/kibana
{% if 'log' in options %}
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/kibana.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/kibana.stderr.log
{% end %}

[watcher:bridge]
cmd = ${parts.buildout.directory}/bin/bridge-to-couch
{% if 'log' in options %}
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/kibana.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/kibana.stderr.log
{% end %}

[watcher:flask]
cmd = ${parts.buildout.directory}/bin/paster
args = serve ${parts.buildout.directory}/etc/deploy.ini
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}
{% if 'log' in options %}
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/flask.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/flask.stderr.log
{% end %}

{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}


[socket:web]
host = ${options['web_host']}
port = ${options['web_port']}


